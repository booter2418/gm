env:
  - GO111MODULE=on
  
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - 386
      - amd64
      - arm
      - arm64
    goarm:
      - "6"
      - "7"
    ignore:
      - goos: darwin
        goarch: 386
    main: ./gm.go
    mod_timestamp: '{{ .CommitTimestamp }}'
    ldflags:
     - -s -w -X 'main.gmVersion={{.Version}}' -X 'main.gmBuildCommit={{.Commit}}' -X 'main.gmBuildTimestamp={{.Date}}'

archives:
  - name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
      - goos: darwin
        format: zip

checksum:
  name_template: "checksums.txt"
  algorithm: sha512

snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - Merge pull request
      - Merge branch

signs:
  - artifacts: all
    args: ["--batch", "-u", "{{ .Env.GPG_FINGERPRINT }}", "--output", "${signature}",  "--detach-sign",  "${artifact}"]

milestones:
  - close: true
    name_template: "{{ .Version }}"

snapcrafts:
  - name: gum
    grade: stable
    confinement: classic
    license: Apache-2.0
    publish: true
    summary: "Gum is a Gradle/Maven/Ant/Bach/JBang wrapper written in Go"
    description: |
      Gum is a Gradle/Maven/Ant/Bach/JBang wrapper written in Go, inspired in https://github.com/dougborg/gdub and https://github.com/srs/gw.
      Gum automatically detects if the project is Gradle, Maven, Ant, Bach, or JBang based and runs the appropriate command. However 
      in the case that Gum guesses wrong you can force a specific build tool to be used. Similarly as gdub, Gum lets you invoke either 
      Gradle, Maven, or Ant from anywhere within the project structure, not just the root directory.

      **Usage**

      Gum supports the following flags

      * **-ga** force Ant execution
      * **-gb** force Bach execution
      * **-gc** displays current configuration and quits
      * **-gd** displays debug information
      * **-gg** force Gradle build
      * **-gh** displays help information
      * **-gj** force JBang execution
      * **-gm** force Maven build
      * **-gn** executes nearest build file
      * **-gq** run gm in quiet mode
      * **-gr** do not replace goals/tasks
      * **-gv** displays version information

      Gum will execute the build based on the root build file unless **-gn** is specified, in which case the nearest build file
      will be selected. If a specific build file is given (**-b**, **--build-file** for Gradle; **-f**, **--file** for Maven,
      **-f**, **-file**, **-buildfile** for Ant) then that file will be used instead.

brews:
  - name: gum
    goarm: 6
    tap:
      owner: kordamp
      name: homebrew-tap
    folder: Formula
    homepage: "https://github.com/kordamp/gm"
    description: "Gum is a Gradle/Maven/Ant/Bach/JBang wrapper written in Go"
    license: Apache-2.0
    skip_upload: auto

announce:
  skip: '{{ .IsSnapshot }}'
  twitter:
    enabled: true
    message_template: 'ðŸš€ {{ .ProjectName }} {{ .Tag }} has been released! {{ .ReleaseURL }}'
  mastodon:
    enabled: true
    message_template: 'ðŸš€ {{ .ProjectName }} {{ .Tag }} has been released! {{ .ReleaseURL }}'
    server: https://mastodon.social
